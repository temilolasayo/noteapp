{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shopinverse\\\\Documents\\\\Assignments\\\\ReactJS\\\\GithubUserSearch\\\\src\\\\components\\\\HookCounter.js\";\nimport React, { useState } from \"react\";\n\nfunction HookCounter() {\n  const initialValue = 0;\n  const [count, SetCount] = useState(0);\n\n  increment = () => {\n    SetCount({\n      count: prevCount + 1\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, \"Count - \", count), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => SetCount(count + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, \"Click Me!\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => SetCount(count + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"Increment\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => SetCount(count + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, \"Decrement\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => SetCount(initialValue),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, \"Reset\"));\n}\n\nexport default HookCounter;","map":{"version":3,"sources":["C:/Users/shopinverse/Documents/Assignments/ReactJS/GithubUserSearch/src/components/HookCounter.js"],"names":["React","useState","HookCounter","initialValue","count","SetCount","increment","prevCount"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,WAAT,GAAuB;AACrB,QAAMC,YAAY,GAAG,CAArB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAAD,CAAlC;;AAEAK,EAAAA,SAAS,GAAG,MAAM;AAChBD,IAAAA,QAAQ,CAAC;AACPD,MAAAA,KAAK,EAAEG,SAAS,GAAG;AADZ,KAAD,CAAR;AAGD,GAJD;;AAKA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAaH,KAAb,CADF,eAEE;AAAQ,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,eAGE;AAAQ,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,eAIE;AAAQ,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,eAKE;AAAQ,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAACF,YAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALF,CADF;AASD;;AAED,eAAeD,WAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction HookCounter() {\r\n  const initialValue = 0;\r\n  const [count, SetCount] = useState(0);\r\n\r\n  increment = () => {\r\n    SetCount({\r\n      count: prevCount + 1,\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <h1>Count - {count}</h1>\r\n      <button onClick={() => SetCount(count + 1)}>Click Me!</button>\r\n      <button onClick={() => SetCount(count + 1)}>Increment</button>\r\n      <button onClick={() => SetCount(count + 1)}>Decrement</button>\r\n      <button onClick={() => SetCount(initialValue)}>Reset</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HookCounter;\r\n"]},"metadata":{},"sourceType":"module"}